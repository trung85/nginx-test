version: 2
jobs:
  build:
    docker: # use the docker executor type; machine and macos executors are also supported
      - image: ubuntu:16.04 # the primary container, where your job's commands are run
    steps:
      - checkout # check out the code in the project directory
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            apt-get update && apt-get install -y curl
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run: |
          docker build -t app .
      - run:
          name: Test image
          command: |
            docker run -d -p 80:80 --name build-image app
            sleep 10
            curl localhost |grep CuongTV
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar app
      - persist_to_workspace:
          root: .
          paths:
            - docker-image
  deploy:
    docker:
      - image: ubuntu:16.04
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace   
      - restore_cache:
          key: v1-requirements.txt
      - run:
          name: Install aws cli
          command: |
            apt-get update && apt-get install -y python3 python3-venv
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: v1-requirements.txt
          paths:
            - "venv"
      - run:
          name: Load image
          command: |
            docker load --input workspace/docker-image/image.tar            
      - run:
          name: Push Docker image
          command: |
            # login aws
            . venv/bin/activate
            aws configure set region $AWS_REGION
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            $(aws ecr get-login)

            # push image to ecr
            docker tag app $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_REPO:${CIRCLE_BRANCH}_$CIRCLE_SHA1
            docker push $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_REPO:${CIRCLE_BRANCH}_$CIRCLE_SHA1

      - run:
          name: deploy
          command: |
            # deploy
            . venv/bin/activate
            sh deploy.sh            
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
